import { script_v1 as scriptV1 } from 'googleapis';
export declare const ERROR: {
    ACCESS_TOKEN: string;
    BAD_CREDENTIALS_FILE: string;
    BAD_REQUEST: (message: string) => string;
    BAD_MANIFEST: string;
    COMMAND_DNE: (command: string) => string;
    CONFLICTING_FILE_EXTENSION: (name: string) => string;
    CREATE_WITH_PARENT: string;
    CREATE: string;
    CREDENTIALS_DNE: (filename: string) => string;
    DEPLOYMENT_COUNT: string;
    DRIVE: string;
    EXECUTE_ENTITY_NOT_FOUND: string;
    FOLDER_EXISTS: string;
    FS_DIR_WRITE: string;
    FS_FILE_WRITE: string;
    INVALID_JSON: string;
    LOGGED_IN_LOCAL: string;
    LOGGED_IN_GLOBAL: string;
    LOGGED_OUT: string;
    LOGS_NODATA: string;
    LOGS_UNAVAILABLE: string;
    NO_API: (enable: boolean, api: string) => string;
    NO_CREDENTIALS: (local: boolean) => string;
    NO_FUNCTION_NAME: string;
    NO_GCLOUD_PROJECT: string;
    NO_PARENT_ID: string;
    NO_LOCAL_CREDENTIALS: string;
    NO_MANIFEST: (filename: string) => string;
    NO_NESTED_PROJECTS: string;
    NO_VERSIONED_DEPLOYMENTS: string;
    NO_WEBAPP: (deploymentId: string) => string;
    OFFLINE: string;
    ONE_DEPLOYMENT_CREATE: string;
    PAYLOAD_UNKNOWN: string;
    PERMISSION_DENIED_LOCAL: string;
    PERMISSION_DENIED: string;
    RATE_LIMIT: string;
    RUN_NODATA: string;
    READ_ONLY_DELETE: string;
    SCRIPT_ID_DNE: string;
    SCRIPT_ID_INCORRECT: (scriptId: string) => string;
    SCRIPT_ID: string;
    SETTINGS_DNE: string;
    UNAUTHENTICATED_LOCAL: string;
    UNAUTHENTICATED: string;
    UNKNOWN_KEY: (key: string) => string;
    PROJECT_ID_INCORRECT: (projectId: string) => string;
};
export declare const LOG: {
    ASK_PROJECT_ID: string;
    NOT_LOGGED_IN: string;
    LOGGED_IN_UNKNOWN: string;
    LOGGED_IN_AS: (email: string) => string;
    AUTH_CODE: string;
    AUTH_PAGE_SUCCESSFUL: string;
    AUTH_SUCCESSFUL: string;
    AUTHORIZE: (authUrl: string) => string;
    CLONE_SUCCESS: (fileCount: number) => string;
    CLONING: string;
    CLONE_SCRIPT_QUESTION: string;
    CREATE_SCRIPT_QUESTION: string;
    CREATE_DRIVE_FILE_FINISH: (filetype: string, fileid: string) => string;
    CREATE_DRIVE_FILE_START: (filetype: string) => string;
    CREATE_PROJECT_FINISH: (filetype: string, scriptId: string) => string;
    CREATE_PROJECT_START: (title: string) => string;
    CREDENTIALS_FOUND: string;
    CREDS_FROM_PROJECT: (projectId: string) => string;
    DEFAULT_CREDENTIALS: string;
    DEPLOYMENT_CREATE: string;
    DEPLOYMENT_DNE: string;
    DEPLOYMENT_LIST: (_scriptId: string) => string;
    DEPLOYMENT_START: (_scriptId: string) => string;
    FILES_TO_PUSH: string;
    FINDING_SCRIPTS_DNE: string;
    FINDING_SCRIPTS: string;
    GRAB_LOGS: string;
    GET_PROJECT_ID_INSTRUCTIONS: string;
    GIVE_DESCRIPTION: string;
    LOCAL_CREDS: string;
    LOGIN: (isLocal: boolean) => string;
    LOGS_SETUP: string;
    NO_GCLOUD_PROJECT: string;
    OPEN_CREDS: (projectId: string) => string;
    OPEN_LINK: (link: string) => string;
    OPEN_PROJECT: (scriptId: string) => string;
    OPEN_WEBAPP: (deploymentId?: string | undefined) => string;
    OPEN_FIRST_PARENT: (parentId: string) => string;
    FOUND_PARENT: (parentId: string) => string;
    PULLING: string;
    PUSH_FAILURE: string;
    PUSH_NO_FILES: string;
    PUSH_SUCCESS: (filesCount: number) => string;
    PUSH_WATCH_UPDATED: (filename: string) => string;
    PUSH_WATCH: string;
    PUSHING: string;
    SAVED_CREDS: (isLocalCreds: boolean) => string;
    SCRIPT_LINK: (scriptId: string) => string;
    STACKDRIVER_SETUP: string;
    STATUS_IGNORE: string;
    STATUS_PUSH: string;
    UNDEPLOYMENT_FINISH: (deploymentId: string) => string;
    UNDEPLOYMENT_ALL_FINISH: string;
    UNDEPLOYMENT_START: (deploymentId: string) => string;
    VERSION_CREATE: string;
    VERSION_CREATED: (versionNumber: number) => string;
    VERSION_DESCRIPTION: ({ versionNumber, description }: scriptV1.Schema$Version) => string;
    VERSION_NUM: (versionsCount: number) => string;
};
