import { PathProxy } from './path-proxy.js';
/**
 * A Singleton class to hold configuration related objects.
 * Use the `get()` method to access the unique singleton instance.
 */
export declare class Conf {
    private static _instance;
    /**
     * This dotfile saves clasp project information, local to project directory.
     */
    readonly project: PathProxy;
    /**
     * This dotfile stores information about ignoring files on `push`. Like .gitignore.
     */
    readonly ignore: IgnoreFile;
    /**
     * This dotfile saves auth information. Should never be committed.
     * There are 2 types: personal & global:
     * - Global: In the $HOME directory.
     * - Personal: In the local directory.
     * @see {ClaspToken}
     */
    readonly auth: AuthFile;
    readonly authLocal: AuthFile;
    /**
     * Private to prevent direct construction calls with the `new` operator.
     */
    private constructor();
    /**
     * The static method that controls the access to the Conf singleton instance.
     *
     * @returns {Conf}
     */
    static get(): Conf;
}
declare class AuthFile extends PathProxy {
    /**
     * Rules to resolves path:
     *
     * - if default path, use as is
     * - otherwise use super.resolve()
     *
     * @returns {string}
     */
    resolve(): string;
}
declare class IgnoreFile extends PathProxy {
    /**
     * Rules to resolves path:
     *
     * - if default, use the **project** directory and the default base filename
     * - otherwise use super.resolve()
     *
     * @returns {string}
     */
    resolve(): string;
}
export {};
